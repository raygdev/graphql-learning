type Query {
    jobs(limit: Int, offset: Int): JobSubList # syntax for passing array (Add array brackets around value)
    job(id: ID!): Job # pass id as variable to look for specific job
    company(id:ID!): Company
}

type JobSubList {
    items:[Job!]!
    totalCount: Int!
}

type Mutation {
    # define the input for the mutation
    createJob(input: CreateJobInput!): Job
    deleteJob(id: ID!): Job
    updateJob(input: UpdateJob!): Job
}

type Company {
    id: ID!
    name: String!
    description: String
    jobs: [Job!]!
}
# custom query Job passed to main query 

# exclamation denotes non-nullable fields

# ID is one of 5 (Int, Boolean, Float, ID, String) built in scalar types from GraphQL

# custom scalars can be made.

# documentation comments start and end with 3 double quotes. double underscores will make a word bold

"""
Represents a job ad posted to our board
"""
type Job {,
    id: ID!
    title: String!
    description: String
    company: Company!
    """The __date__ when the job was published, in ISO-8601 format. E.g. `2022-12-31`."""
    date:String!
}
# input defines the structure of mutation inputs so that
# the mutation "function" knows what values to expect
input CreateJobInput {
  title: String!
  description: String
}

input UpdateJob {
    id: ID!
    title: String!
    description: String
}